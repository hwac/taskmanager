{"version":3,"sources":["components/Button/Button.js","components/Modal/Modal.js","pages/Header.js","App.js","stores/userStore.js","index.js"],"names":["Button","props","state","this","children","clickEvent","className","onClick","Component","defaultProps","Modal","confirm","console","log","title","buttonGroup","callbackFunction","isOpen","map","item","i","key","value","text","dotenv","config","loginSuccess","response","loginFailure","clickMenuButton","alert","Header","inject","stores","login","userStore","observable","loginButtonCallback","closeLoginModal","setState","isLoginModalOpen","openLoginModal","close","clientId","process","buttonText","onSuccess","onFailure","cookiePolicy","App","UserStore","googleId","imageUrl","email","name","givenName","familyName","action","memberStore","render","document","getElementById"],"mappings":"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","file":"static/js/main.2dd30ef0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Button.scss';\n\nclass Button extends Component {\n  static defaultProps  = {\n    children:\"\"\n  }\n\tconstructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\trender () {\n    const {children, clickEvent, className} = this.props;\n\t\treturn (\n      <button\n        onClick={clickEvent}\n        className={className}\n      >\n        {children}\n      </button>\n    )\n\t}\n}\nexport default Button;","import React, { Component } from 'react';\nimport \"./Modal.scss\";\nimport Button from 'components/Button';\n\n//높이 넓이,버튼들\n\nclass Modal extends Component {\n\tstatic defaultProps  = {\n\t\tisOpen:false,\n    buttonGroup:[\n\t\t\t{\n\t\t\t\ttext:\"닫기\",\n\t\t\t\tvalue:0,\n\t\t\t\tclassName:\"blue\"\n\t\t\t}\n\t\t]\n  }\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tif(props.confirm){\n\t\t\t\n\t\t}\n\t\tconsole.log(props);\n    this.state = {\n      \n    };\n  }\n\trender () {\n\t\tconst {title, children, buttonGroup, callbackFunction, isOpen} = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t{\n\t\t\t\tisOpen ? \n\t\t\t\t<>\n\t\t\t\t<div className=\"modal-overlay\" onClick={() => callbackFunction(0)}/>\n\t\t\t\t<div className=\"modal\">\n\t\t\t\t\t{title && \n\t\t\t\t\t\t<>\n\t\t\t\t\t\t<div className=\"title\">{title}</div>\n\t\t\t\t\t\t<div className=\"bar\"/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bar\"/>\n\t\t\t\t\t<div className=\"button-wrap\">\n\t\t\t\t\t\t{/* {buttonGroup.map((item, i) => {\n\t\t\t\t\t\t\treturn (<div><Button className={item.className} key={i} onClick={() => callbackFunction(item.value)}>{item.text}</Button></div>);\n\t\t\t\t\t\t})} */}\n\t\t\t\t\t\t{buttonGroup.map((item, i) => {\n\t\t\t\t\t\t\treturn (<label><Button className={item.className || \"purple\"} key={i} clickEvent={() => callbackFunction(item.value)}>{item.text}</Button></label>);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t\t: null\n\t\t\t}\n\t\t\t</>\n\t\t)\n\t}\n}\nexport default Modal;","import React, { Component } from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport dotenv from 'dotenv';\r\nimport Button from 'components/Button';\r\nimport './Header.scss';\r\nimport Modal from 'components/Modal';\r\nimport { inject } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\ndotenv.config();\r\n\r\nconst loginSuccess = (response) => {\r\n\tconsole.log(response);\r\n}\r\n\r\nconst loginFailure = (response) => {\r\n\tconsole.log(response);\r\n}\r\n\r\nconst clickMenuButton = () => {\r\n\talert(\"메뉴클릭\")\r\n}\r\n\r\n@inject(stores => ({\r\n\tlogin: stores.userStore.login()\r\n}))\r\n\r\n@observable\r\nclass Header extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      isLoginModalOpen: false, \r\n    }\r\n\t}\r\n\r\n\tloginButtonCallback = (value) => {\r\n\t\t// console.log(value);\r\n\t\tthis.props.login(value);\r\n\t\tvalue == 0 && this.closeLoginModal();\r\n\t}\r\n\r\n\tcloseLoginModal = () => {\r\n\t\tthis.setState({ isLoginModalOpen: false }); \r\n\t}\r\n\t\r\n\topenLoginModal = () => {\r\n\t\tthis.setState({ isLoginModalOpen: true });\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"header\">\r\n\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"btn-menu\"\r\n\t\t\t\t\t\tclickEvent={clickMenuButton}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* <h1>Hwac</h1>\r\n\t\t\t\t\t<span>작업관리</span> */}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclickEvent={this.openLoginModal}\r\n\t\t\t\t\t\tclassName=\"btn-two cyan mini\"\r\n\t\t\t\t\t>로그인</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\ttitle=\"로그인\"\r\n\t\t\t\t\tcallbackFunction={this.loginButtonCallback}\r\n\t\t\t\t\tisOpen={this.state.isLoginModalOpen}\r\n\t\t\t\t\tclose={this.closeLoginModal}\r\n\t\t\t\t\tbuttonGroup={[\r\n\t\t\t\t\t\t// {\r\n\t\t\t\t\t\t// \ttext:\"확인\",\r\n\t\t\t\t\t\t// \tvalue:1,\r\n\t\t\t\t\t\t// \tclassName:\"green\"\r\n\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttext:\"닫기\",\r\n\t\t\t\t\t\t\tvalue:0,\r\n\t\t\t\t\t\t\tclassName:\"purple\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<GoogleLogin\r\n\t\t\t\t\t\tclientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\r\n\t\t\t\t\t\tbuttonText=\"구글로그인\"\r\n\t\t\t\t\t\tonSuccess={loginSuccess}\r\n\t\t\t\t\t\tonFailure={loginFailure}\r\n\t\t\t\t\t\tcookiePolicy={'single_host_origin'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default Header;","import React from 'react';\nimport './App.css';\nimport Header from './pages/Header';\n\nconst responseGoogle = (response) => {\n  console.log(response);\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header>\n      </Header>\n      <nav>\n      </nav>\n      <section>\n      </section>\n      <aside>\n      </aside>\n      <footer>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import {observable, action} from 'mobx';\n\nclass UserStore {\n  @observable user = {\n    googleId: '',\n    imageUrl: '',\n    email: '',\n    name: '',\n    givenName: '',\n    familyName: ''\n  };\n\n  @action\n  login = (value) => {\n    console.log(\"userStore.login\");\n    console.log(value);\n  }\n}\nexport default UserStore;","import React from 'react';\nimport {render} from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nimport { Provider } from \"mobx-react\";\n\nimport memberStore from \"./stores/memberStore\";\nimport userStore from \"./stores/userStore\";\n\nconst stores = {\n  memberStore,\n  userStore\n};\n\nrender(\n  <Provider {...stores}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}